1.Set Matrix zero
Code-
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        
        int m=matrix.size();
        int n=matrix[0].size();
        vector<int>x,y;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(matrix[i][j]==0){
                    x.push_back(i);
                    y.push_back(j);
                }
            }
        }
        for(int i=0;i<x.size();i++){
            int ind=x[i];
            for(int j=0;j<n;j++){
                matrix[ind][j]=0;
            }
        }
         for(int i=0;i<y.size();i++){
            int ind=y[i];
            for(int j=0;j<m;j++){
                matrix[j][ind]=0;
            }
        }
    }
};



2.Kadane algo
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxi=INT_MIN;
        int temp=0;
        for(int i=0;i<nums.size();i++){
            temp+=nums[i];
            maxi=max(maxi,temp);
            if(temp<0){
                temp=0
;            }
        }return maxi;
        
    }
};

3.Sort Colors
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int low=0;
        int h=nums.size()-1;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==0){
                swap(nums[low],nums[i]);
                low++;
            }
        }
        for(int i=low;i<nums.size();i++){
            if(nums[i]==1){
                swap(nums[low],nums[i]);
                low++;
            }
        }
    }
};

4.Stock buy and sell

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        int maxi=INT_MIN;
        int min_val=prices[0];
        for(int i=1;i<n;i++){
            maxi=max(maxi,prices[i]-min_val);
            min_val=min(min_val,prices[i]);
        }
        return maxi>=0?maxi:0;
       
    }
};
